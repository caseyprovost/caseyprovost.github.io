<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title></title>
    <description>A self-taught web developer gifting back nuggets of knowledge</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Prologue</title>
        
        
          <description>&lt;h3 id=&quot;the-beginning&quot;&gt;The Beginning&lt;/h3&gt;

&lt;p&gt;It is that time, when I, a senior developer of twelve years, finally staves off the laziness of not writing down my adventures, discoveries, and frustrations in respect to web development (mostly) and other things I am equally passionate about. Let’s start off by answering one of those questions that us developers have while stumbling on a blog: “Is this information valuable to me?”. The answer is “maybe”. If you like to talk about Ruby, Rails, Vue, Javascript, enterprise architecture, working in a startup, and similar things…then you will likely find something of value in these pages.&lt;/p&gt;

&lt;p&gt;I am Casey Provost, a self-taught “full stack” developer who has been building apps of all various shapes and sizes since 2007. My comfortable stack is Rails with ES6/7/8 with Postgres, but I also enjoy and write Crystal, Vue, Node, and CSS. Recently I have been doing a lot more “enterprise” and have found that the interwebs are lacking in information about working on Rails in that ecosystem.&lt;/p&gt;

&lt;p&gt;There are myths out there that Ruby is not fast or robust enough to be an enterprise tool and that it lacks proper concurrrency support. While that last point might be true; Ruby is still an amazing tool for enterprise companies building modern applications, proofs of concept, or even command line tools! I sincerely hope that over time and through many articles I can help spread Ruby even more than it is now and share my undending happiness of programming in languages that are just pure joy.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 11 Dec 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/prologue/</link>
        <guid isPermaLink="true">http://localhost:4000/prologue/</guid>
      </item>
    
      <item>
        <title>Chapter 1: FTPS &amp; Ruby</title>
        
        
          <description>&lt;p&gt;Before last month I had no idea that FTPS was a thing. Partly because a lot of FTP clients default between FTP and SFTP. Largely it is because it was referred to as FTP with ssl, FTP Secure, FTP-SSL, and other variants. It turns out that it is a common protocol when communicating with bank servers, who knew? Now I know what you are thinking…why is FTP interesting? The answer: mainly because Ruby JUST implemented support in Ruby 2.4!&lt;/p&gt;

&lt;p&gt;If you have researched this topic or needed to implement FTPS in ruby yourself you are probably familiar with &lt;a href=&quot;https://github.com/bnix/double-bag-ftps&quot;&gt;Double Bag&lt;/a&gt;. It was a great library and still is for those of you who have not moved to Ruby 2.4 and beyond…if you have though you were likely immediately depressed to find that Double Bag no longer worked for you. Sadly is it not compatible with 2.4. Don’t lose hope though! After reading though the issues on Double Bag I found that other developers had discovered the new feature in 2.4 and had been able to move forward using that.&lt;/p&gt;

&lt;p&gt;And just like that I was able to progress on my project as well..for a second. Then I discovered that there is VERY little documentation on the Ruby Net::FTP class with respect to SSL and certificate usage.&lt;/p&gt;
</description>
        
        <pubDate>Tue, 11 Dec 2018 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/chapter-1-ftps/</link>
        <guid isPermaLink="true">http://localhost:4000/chapter-1-ftps/</guid>
      </item>
    
  </channel>
</rss>